services:
  nginx:
    image: nginx:stable
    container_name: nginx_gateway
    ports:
      - "8080:80"
    expose:
      - "80"
    volumes:
      - ./nginx/default.conf:/etc/nginx/conf.d/default.conf:ro
    depends_on:
      - auth
      - ecommerce

  auth:
    build:
      context: ./back/auth
    container_name: auth_server
    env_file:
      - .env
    ports:
      - "9000:9000"

  ecommerce:
    build:
      context: ./back/ecommerce
    container_name: ecommerce_server
    env_file:
      - .env
    ports:
      - "8090:8090"

  postgres-auth:
    image: postgres:latest
    container_name: postgres-auth
    restart: unless-stopped
    env_file:
      - ./back/auth/auth-container/.env.postgres.auth
    ports:
      - "5433:5432"
    volumes:
      - postgres-auth:/var/lib/postgresql/data

  postgres-ecommerce:
    image: postgres:latest
    container_name: postgres-ecommerce
    restart: unless-stopped
    env_file:
      - ./back/ecommerce/e-commerce-db/.env.postgres.ecommerce
    ports:
      - "5432:5432"
    volumes:
      - postgres-ecommerce:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis
    restart: unless-stopped
    ports:
      - "6379:6379"
    env_file:
      - ./back/auth/auth-container/.env.redis
    command: ["redis-server", "--requirepass", "${DB_REDIS_PASSWORD}"]
    volumes:
      - redis:/db/redis

  mongodb:
    image: mongo:latest
    container_name: mongodb
    restart: unless-stopped
    ports:
      - "27017:27017"
    env_file:
      - ./back/ecommerce/e-commerce-db/.env.mongodb
    volumes:
      - mongodb:/data/db

volumes:
  postgres-auth:
  postgres-ecommerce:
  redis:
  mongodb:
